@model Infoblog.Models.CreateMeetingViewModel

@Scripts.Render("~/Scripts/jquery-3.3.1.js")

@helper createDropBoxes(string id, string id2)
{
<div class="form-group">
<div class="col-md-10">
    @{
        var hours = new List<SelectListItem>();
        for (int i = 0; i < 24; i++)
        {
            string displayTxt;
            if (i < 10)
            {
                displayTxt = "0" + i;
            }
            else
            {
                displayTxt = i.ToString();
            }
            hours.Add(new SelectListItem()
            {

                Text = displayTxt,
                Value = displayTxt
            });
        }

        var minutes = new List<SelectListItem>();
        for (int i = 0; i < 60; i++)
        {
            string displayTxt;
            if (i < 10)
            {
                displayTxt = "0" + i;
            }
            else
            {
                displayTxt = i.ToString();
            }
            minutes.Add(new SelectListItem()
            {

                Text = displayTxt,
                Value = displayTxt
            });
        }
    }

    @Html.DropDownList(id, hours, "Timmar")
    @Html.DropDownList(id2, minutes, "Minuter")
</div>
</div>
}

<div class="row">
    <div class="col-lg-12">
        <h2>Skapa nytt möte</h2>
        <hr />
    </div>
</div>

<div class="row">
    <div class="col-lg-6">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                    </div>
                </div>

                <!---Lägg till ny mötestid-->
                <div id="container-add-time">

                    <label>Starttid</label>
                    @createDropBoxes("startHours", "startMinutes")
                    <label>Sluttid</label>
                    @createDropBoxes("endHours", "endMinutes")
                    <input type="date" id="meetingDate" />

                    <button id="btnAddMeetingTime">Lägg till</button>

                </div>

                <div id="container-add-users">
                    <select multiple>
                        @foreach(var u in Model.AllUsers)
                        {
                            <option value="@u.Email">@u.FirstName @u.LastName</option>
                        }
                    </select>
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input id="createMeetingPoll" type="submit" value="Skapa" class="btn btn-default" />
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
    <div class="col-lg-6">
        <table class="table table-striped table-hover" id="meetingTimeTable">
            <thead>
                <tr>
                    <th>Mötestider</th>
                </tr>
            </thead>

        </table>
    </div>
</div>

<script type="text/javascript">
    $(function () {
        var meetingTimes = new Array();

        $('#btnAddMeetingTime').on('click', function (ev) {
            ev.preventDefault();

            var meetingTime = $('#meetingDate').val() + " " + $('#startHours').val() + ":" + $('#startMinutes').val() +
                "-" + $('#endHours').val() + ":" + $('#endMinutes').val();

            var row = $('<tr></tr>');
            row.append('<td>' + meetingTime + '</td>');

            $('#meetingTimeTable').append(row);

            meetingTimes.push(meetingTime);
        });

        $('#createMeetingPoll').on('click', function (ev) {
            ev.preventDefault();

            var data = {
                Title: $('#Title').val(),
                Content: $('#Content').val(),
                MeetingTimes: meetingTimes
            };

            $.ajax({
                url: '/Meeting/CreateMeeting',
                type: 'POST',
                data: data,
                success: function () {
                    window.location.href = "/Meeting/Index"
                },
                error: function (response) {
                    alert(response);
                }
            });
        });

    });

</script>

